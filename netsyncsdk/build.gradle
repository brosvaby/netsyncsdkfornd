apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion;

    aaptOptions {
        cruncherEnabled = false
    }

    defaultConfig {
        useLibrary 'org.apache.http.legacy'
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        ndk {
            moduleName = "libjni"
        }

        sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDirs 'src/main/jniLibs'

            resources {
                srcDirs "src/main/resources"
            }
        }

        buildTypes {
            debug {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }

        lintOptions {
            abortOnError false
            checkReleaseBuilds false
            disable 'MissingTranslation'
        }
        dexOptions {
            jumboMode true
            javaMaxHeapSize "4g"
        }
    }

}

greendao {
    schemaVersion 1
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api fileTree(include: ['*.jar'], dir: 'libsncg2sdk')
    api fileTree(include: ['*.jar'], dir: 'libsndsdkuniversal')

    api "com.android.support:appcompat-v7:$rootProject.ext.supportAppcompatVersion"
    api "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    api "com.android.support:recyclerview-v7:$rootProject.ext.supportRecyclerViewVersion"
    api "com.android.support:design:$rootProject.ext.supportDesignVersion"
    api 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation "com.android.support:multidex:$rootProject.ext.supportLibraryMultidexVersion"

    // font
    api "uk.co.chrisjenx:calligraphy:$rootProject.ext.calligraphyVersion"

    // network
    api "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2AndroidNetworking"
    api "com.google.code.gson:gson:$rootProject.gsonVersion"

    // dependency injection
    api "com.google.dagger:dagger:$rootProject.ext.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    api 'javax.inject:javax.inject:1'

    // reactive
    api "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjava2Version"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroidVersion"

    // code generator for view
    api "com.jakewharton:butterknife:$rootProject.ext.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterKnifeVersion"

    // common
    api 'joda-time:joda-time:2.1'
    api 'org.apache.commons:commons-lang3:3.1'
    api 'commons-io:commons-io:1.3.2'
    implementation "com.google.guava:guava:23.0-android"

    // design
    api "com.nineoldandroids:library:$rootProject.ext.nineoldandroids"
    api 'com.github.ksoichiro:android-observablescrollview:1.5.2'
}

task deleteOldJar(type: Delete) {
    delete 'release/netsyncsdk.jar'
}

task exportJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('release/')
    include('classes.jar')
    rename('classes.jar', 'netsyncsdk.jar')
}

exportJar.dependsOn(deleteOldJar, build)

task deleteOldAar (type: Delete) {
    delete 'release/netsyncsdk.aar'
}

task exportAar(type: Copy) {
    from('build/outputs/aar/')
    into('release/')
    include('netsyncsdk-release.aar')
    rename('netsyncsdk-release.aar', 'netsyncsdk.aar')
}